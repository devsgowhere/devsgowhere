---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Theme from "../../layouts/Theme.astro";
import Footer from "../../components/Footer.astro";

import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import EventCard from "../../components/EventCard.astro";
import { Settings, DateTime } from "luxon";

Settings.defaultZone = "Asia/Singapore";

export async function getStaticPaths() {
  const uniqueTags = new Set((await getCollection("events"))
  .flatMap((event) => {
    return event.data.tags;
  }));
  
  const paramList = Array.from(uniqueTags).map((tag) => {
    return {
      params: { tag: tag },
    };
  });
  return paramList;
}

const { tag } = Astro.params;

const events = (await getCollection("events"))
  .filter((event) => {
    // Filter events that have the current tag
    return event.data.tags && event.data.tags.includes(tag);
  })
  .sort(
    (a, b) =>
      new Date(a.data.startDate).valueOf() -
      new Date(b.data.startDate).valueOf(),
  );

// Group events by date
const groupedEvents = events.reduce((acc: any, event) => {
  const date = DateTime.fromISO(event.data.startDate).toFormat('ccc, d LLLL y')
  if (!acc[date]) {
    acc[date] = [];
  }
  acc[date].push(event);
  return acc;
}, {});
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`${tag} Events - ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
    <script src="https://app.unpkg.com/framer-motion@12.12.1/dist/framer-motion.min.js"></script>
  </head>
  <Theme>
    <Header />
    <main class="events-list-page pt-xl pb-3xl">
      <h1 class="text-3xl text-bold text-accent mb-xl">
        Events tagged with "{tag}"
      </h1>      
      <div class="container">
        <section>
          { Object.keys(groupedEvents).length > 0 ? (
            Object.keys(groupedEvents).map((date) => (
              <div class="event-date">
                <fieldset class="mb-s mt-m" style="border-bottom: 0px; border-left: 0px; border-right: 0px; border-color: var(--gray-7);">
                  <legend class="text-3xl text-bold text-gray-7 px-m">
                    {date}
                  </legend>
                </fieldset>

                <ul class="event-list">
                  {
                    groupedEvents[date].map((event) => (
                      <li class="event-list-item loaded" data-id={event.id}>
                        <EventCard event={event} />
                      </li>
                    ))
                  }
                </ul>
              </div>
            ))
          ) : (
            <p class="text-gray-5 text-2xl">No events found for tag "{tag}".</p>
          )}

          <div class="event-list__empty hide">
            <p class="text-gray-5 text-2xl">No results found ðŸ¤•</p>
          </div>
        </section>
      </div>
    </main>
    <Footer />
  </Theme>
</html>

<style lang="scss">
  .events-list-page {
    text-align: center;
  }

  ul.event-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .form-control__append {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: #999;
    cursor: pointer;
    padding: 5px;
    
    &:hover {
      color: #666;
    }
  }
  
  .event-list-item {
    transition: transform 0.3s ease-out, opacity 0.4s ease-out, height 0.5s ease-out;
    opacity: 0;
    transform: translateY(20px);
    height: auto;
    overflow: hidden;
    
    &.loaded {
      opacity: 1;
      transform: translateY(0);
    }
    
    &.hide {
      opacity: 0;
      height: 0;
      margin: 0;
      padding: 0;
      transform: translateY(10px);
    }
  }
  
  .hide {
    display: none;
  }
  
  .search-results-info {
    text-align: center;
    color: #666;
    font-size: 0.9rem;
    margin-top: 1rem;
    transition: opacity 0.3s ease;
    
    .results-count {
      font-weight: bold;
      color: #555;
    }
  }
  
  .event-list__empty {
    text-align: center;
    margin: 3rem 0;
    transition: opacity 0.3s ease, transform 0.4s ease;
    opacity: 0;
    transform: scale(0.95);
    
    &:not(.hide) {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  .search-loader {
    position: absolute;
    right: 40px;
    top: 50%;
    transform: translateY(-50%);
    
    &__spinner {
      width: 18px;
      height: 18px;
      border: 2px solid rgba(0, 0, 0, 0.1);
      border-top-color: #767676;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
</style>